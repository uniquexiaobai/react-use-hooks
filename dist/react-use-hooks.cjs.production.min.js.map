{"version":3,"file":"react-use-hooks.cjs.production.min.js","sources":["../src/index.tsx","../src/use-boolean.tsx","../src/use-copy-clipboard.tsx","../src/use-debounce.tsx","../src/use-in-viewport.tsx","../src/utils.ts","../src/use-mounted.tsx"],"sourcesContent":["import * as React from 'react';\n\nexport { default as useBoolean } from './use-boolean';\nexport { default as useCopyClipboard } from './use-copy-clipboard';\nexport { default as useDebounce } from './use-debounce';\nexport { default as useInViewport } from './use-in-viewport';\nexport { default as useMounted } from './use-mounted';\n\nexport const Hello = () => {\n\treturn <div>hello react hooks</div>;\n};\n","import { useState } from 'react';\n\nconst useBoolean = (\n\tinitialValue: boolean\n): [boolean, (x?: boolean) => void] => {\n\tconst [value, setValue] = useState<boolean>(initialValue);\n\n\tconst toggle = (forceValue?: boolean) => {\n\t\tif (typeof forceValue === 'boolean') {\n\t\t\tsetValue(forceValue);\n\t\t} else {\n\t\t\tsetValue(!value);\n\t\t}\n\t};\n\n\treturn [value, toggle];\n};\n\nexport default useBoolean;\n","import { useState } from 'react';\n\nconst copyPolyfill = (text: string) => {\n\tconst textArea = document.createElement('textarea');\n\n\ttextArea.style.position = 'absolute';\n\ttextArea.style.top = '-9999px';\n\ttextArea.style.left = '-9999px';\n\ttextArea.value = text;\n\n\tdocument.body.appendChild(textArea);\n\ttextArea.focus();\n\ttextArea.select();\n\n\ttry {\n\t\treturn document.execCommand('copy');\n\t} catch (err) {\n\t\tconsole.log(err);\n\t\treturn false;\n\t} finally {\n\t\tdocument.body.removeChild(textArea);\n\t}\n};\n\nconst copy = (text: string) => {\n\tdocument.addEventListener('copy', function onCopy(e: any) {\n\t\te.clipboardData.setData('text/plain', text);\n\t\te.preventDefault();\n\t\tdocument.removeEventListener('copy', onCopy);\n\t});\n\n\tlet isCopied;\n\n\ttry {\n\t\tisCopied = document.execCommand('copy');\n\t} catch (err) {\n\t\tisCopied = false;\n\t\tconsole.log(err);\n\t}\n\n\tif (!isCopied) {\n\t\tisCopied = copyPolyfill(text);\n\t}\n\n\treturn isCopied;\n};\n\n// TODO: Async Clipboard API\n// https://developers.google.com/web/updates/2018/03/clipboardapi\nconst useCopyClipboard = (): [boolean, (x: string) => void] => {\n\tconst [isCopied, setCopied] = useState<boolean>(false);\n\n\treturn [\n\t\tisCopied,\n\t\ttext => {\n\t\t\tconst didCopy = copy(text);\n\t\t\tsetCopied(didCopy);\n\t\t},\n\t];\n};\n\nexport default useCopyClipboard;\n","import { useRef } from 'react';\n\ntype Fn = (...args: any) => any;\n\nfunction useDebounce<T extends Fn>(func: T, delay: number): T {\n\tconst timerRef = useRef<number | null>(null);\n\n\tconst debounced = (...args: any) => {\n\t\tif (timerRef.current) {\n\t\t\twindow.clearTimeout(timerRef.current);\n\t\t}\n\n\t\ttimerRef.current = window.setTimeout(() => {\n\t\t\tfunc(...args);\n\t\t}, delay);\n\t};\n\n\treturn debounced as T;\n}\n\nexport default useDebounce;\n","import { useState, useEffect, useRef } from 'react';\nimport { throttle } from './utils';\n\ninterface Options {\n\troot?: HTMLElement;\n\trootMargin?: string;\n\tthreshold?: number | number[];\n}\n\nconst inViewportPolyfill = (\n\telement: HTMLElement,\n\tcallback: (x: any) => void,\n\toptions: Options\n) => {\n\tconst { root = document.documentElement } = options;\n\tconst viewWidth = root.clientWidth;\n\tconst viewHeight = root.clientHeight;\n\n\tconst update = throttle(() => {\n\t\tconst {\n\t\t\twidth,\n\t\t\theight,\n\t\t\ttop,\n\t\t\tbottom,\n\t\t\tleft,\n\t\t\tright,\n\t\t} = element.getBoundingClientRect();\n\n\t\tcallback(\n\t\t\twidth &&\n\t\t\t\theight &&\n\t\t\t\ttop < viewHeight &&\n\t\t\t\tbottom > 0 &&\n\t\t\t\tleft < viewWidth &&\n\t\t\t\tright > 0\n\t\t);\n\t}, 250);\n\n\tdocument.addEventListener('scroll', update);\n\treturn () => document.removeEventListener('scroll', update);\n};\n\nconst useInViewport = (options: Options = {}) => {\n\tconst [inViewport, setInViewport] = useState<boolean>(false);\n\tconst ref = useRef<HTMLElement>();\n\tconst { root, rootMargin = '0px', threshold = [0] } = options;\n\n\tuseEffect(() => {\n\t\tlet unobserve = () => {};\n\n\t\tif (window.IntersectionObserver) {\n\t\t\tconst observer = new window.IntersectionObserver(\n\t\t\t\t([entry]) => {\n\t\t\t\t\tsetInViewport(entry.isIntersecting);\n\t\t\t\t},\n\t\t\t\t{ root, rootMargin, threshold }\n\t\t\t);\n\n\t\t\tif (ref.current) {\n\t\t\t\tobserver.observe(ref.current);\n\t\t\t\tunobserve = () => observer.unobserve(ref.current!);\n\t\t\t}\n\t\t} else {\n\t\t\tif (ref.current) {\n\t\t\t\tunobserve = inViewportPolyfill(ref.current, setInViewport, options);\n\t\t\t}\n\t\t}\n\n\t\treturn unobserve;\n\t}, []);\n\n\treturn [inViewport, ref];\n};\n\nexport default useInViewport;\n","export const debounce = (func: () => any, wait: number) => {\n\tlet timer: number;\n\n\treturn (...args: []) => {\n\t\tif (timer) {\n\t\t\tclearTimeout(timer);\n\t\t}\n\n\t\ttimer = window.setTimeout(() => {\n\t\t\tfunc(...args);\n\t\t}, wait);\n\t};\n};\n\nexport const throttle = (func: () => any, wait: number) => {\n\tlet last: number, timer: number;\n\n\treturn (...args: []) => {\n\t\tconst now = Date.now();\n\n\t\tif (last && now - last < wait) {\n\t\t\tclearTimeout(timer);\n\n\t\t\ttimer = window.setTimeout(() => {\n\t\t\t\tlast = now;\n\t\t\t\tfunc(...args);\n\t\t\t}, wait);\n\t\t} else {\n\t\t\tlast = now;\n\t\t\tfunc(...args);\n\t\t}\n\t};\n};\n","import { useState, useEffect } from 'react';\n\nfunction useMounted(): boolean {\n\tconst [mounted, setMounted] = useState<boolean>(false);\n\n\tuseEffect(() => {\n\t\tsetMounted(true);\n\t}, []);\n\n\treturn mounted;\n}\n\nexport default useMounted;\n"],"names":["React","initialValue","useState","value","setValue","forceValue","setCopied","text","didCopy","isCopied","document","addEventListener","onCopy","e","clipboardData","setData","preventDefault","removeEventListener","execCommand","err","console","log","textArea","createElement","style","position","top","left","body","appendChild","focus","select","removeChild","copyPolyfill","copy","func","delay","timerRef","useRef","args","current","window","clearTimeout","setTimeout","options","inViewport","setInViewport","ref","root","rootMargin","threshold","useEffect","unobserve","IntersectionObserver","observer","isIntersecting","observe","element","callback","last","timer","documentElement","viewWidth","clientWidth","viewHeight","clientHeight","update","getBoundingClientRect","width","height","bottom","right","now","Date","inViewportPolyfill","mounted","setMounted"],"mappings":"yGAQqB,kBACbA,oECPW,SAClBC,SAE0BC,WAAkBD,GAArCE,OAAOC,aAUP,CAACD,EARO,SAACE,GAEdD,EADyB,kBAAfC,EACDA,GAECF,+BCsCY,iBACMD,YAAkB,GAA/BI,aAEV,MAEN,SAAAC,OACOC,EA/BI,SAACD,OAOTE,EANJC,SAASC,iBAAiB,QAAQ,SAASC,EAAOC,GACjDA,EAAEC,cAAcC,QAAQ,aAAcR,GACtCM,EAAEG,iBACFN,SAASO,oBAAoB,OAAQL,UAMrCH,EAAWC,SAASQ,YAAY,QAC/B,MAAOC,GACRV,GAAW,EACXW,QAAQC,IAAIF,UAGRV,IACJA,EAvCmB,SAACF,OACfe,EAAWZ,SAASa,cAAc,YAExCD,EAASE,MAAMC,SAAW,WAC1BH,EAASE,MAAME,IAAM,UACrBJ,EAASE,MAAMG,KAAO,UACtBL,EAASnB,MAAQI,EAEjBG,SAASkB,KAAKC,YAAYP,GAC1BA,EAASQ,QACTR,EAASS,oBAGDrB,SAASQ,YAAY,QAC3B,MAAOC,UACRC,QAAQC,IAAIF,IACL,UAEPT,SAASkB,KAAKI,YAAYV,IAqBfW,CAAa1B,IAGlBE,EAWWyB,CAAK3B,GACrBD,EAAUE,0BCpDb,SAAmC2B,EAASC,OACrCC,EAAWC,SAAsB,aAErB,sCAAIC,2BAAAA,kBACjBF,EAASG,SACZC,OAAOC,aAAaL,EAASG,SAG9BH,EAASG,QAAUC,OAAOE,YAAW,WACpCR,eAAQI,KACNH,2BC4BiB,SAACQ,YAAAA,IAAAA,EAAmB,UACL1C,YAAkB,GAA/C2C,OAAYC,OACbC,EAAMT,WACJU,EAA8CJ,EAA9CI,OAA8CJ,EAAxCK,WAAAA,aAAa,UAA2BL,EAApBM,UAAAA,aAAY,CAAC,YAE/CC,aAAU,eACLC,EAAY,gBAEZX,OAAOY,qBAAsB,KAC1BC,EAAW,IAAIb,OAAOY,sBAC3B,YACCP,OAAoBS,kBAErB,CAAEP,KAAAA,EAAMC,WAAAA,EAAYC,UAAAA,IAGjBH,EAAIP,UACPc,EAASE,QAAQT,EAAIP,SACrBY,EAAY,kBAAME,EAASF,UAAUL,EAAIP,gBAGtCO,EAAIP,UACPY,EAvDuB,SAC1BK,EACAC,EACAd,OCEwBT,EACpBwB,EAAcC,IDD0BhB,EAApCI,KAAAA,aAAOtC,SAASmD,kBAClBC,EAAYd,EAAKe,YACjBC,EAAahB,EAAKiB,aAElBC,GCJkB/B,EDIA,iBAQnBsB,EAAQU,wBAEZT,IARCU,SACAC,UACA3C,IASOsC,KARPM,OASU,KARV3C,KASQmC,KARRS,MASS,ICjBJ,sCAAIhC,2BAAAA,sBACJiC,EAAMC,KAAKD,MAEbb,GAAQa,EAAMb,EDgBhB,KCfDjB,aAAakB,GAEbA,EAAQnB,OAAOE,YAAW,WACzBgB,EAAOa,EACPrC,eAAQI,KDWR,OCRDoB,EAAOa,EACPrC,eAAQI,aDSV7B,SAASC,iBAAiB,SAAUuD,GAC7B,kBAAMxD,SAASO,oBAAoB,SAAUiD,IAyBrCQ,CAAmB3B,EAAIP,QAASM,EAAeF,WAItDQ,IACL,IAEI,CAACP,EAAYE,uBErErB,iBAC+B7C,YAAkB,GAAzCyE,OAASC,cAEhBzB,aAAU,WACTyB,GAAW,KACT,IAEID"}