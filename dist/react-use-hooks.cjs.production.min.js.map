{"version":3,"file":"react-use-hooks.cjs.production.min.js","sources":["../src/use-boolean.tsx","../src/use-copy-clipboard.tsx","../src/use-debounce.tsx","../src/use-in-viewport.tsx","../src/utils.ts","../src/use-mounted.tsx","../src/use-throttle.tsx"],"sourcesContent":["import { useState } from 'react';\n\nconst useBoolean = (\n  initialValue: boolean\n): [boolean, (x?: boolean) => void] => {\n  const [value, setValue] = useState<boolean>(initialValue);\n\n  const toggle = (forceValue?: boolean) => {\n    if (typeof forceValue === 'boolean') {\n      setValue(forceValue);\n    } else {\n      setValue(!value);\n    }\n  };\n\n  return [value, toggle];\n};\n\nexport default useBoolean;\n","import { useState } from 'react';\n\nconst copyPolyfill = (text: string) => {\n  const textArea = document.createElement('textarea');\n\n  textArea.style.position = 'absolute';\n  textArea.style.top = '-9999px';\n  textArea.style.left = '-9999px';\n  textArea.value = text;\n\n  document.body.appendChild(textArea);\n  textArea.focus();\n  textArea.select();\n\n  try {\n    return document.execCommand('copy');\n  } catch (err) {\n    console.log(err);\n    return false;\n  } finally {\n    document.body.removeChild(textArea);\n  }\n};\n\nconst copy = (text: string) => {\n  document.addEventListener('copy', function onCopy(e: any) {\n    e.clipboardData.setData('text/plain', text);\n    e.preventDefault();\n    document.removeEventListener('copy', onCopy);\n  });\n\n  let isCopied;\n\n  try {\n    isCopied = document.execCommand('copy');\n  } catch (err) {\n    isCopied = false;\n    console.log(err);\n  }\n\n  if (!isCopied) {\n    isCopied = copyPolyfill(text);\n  }\n\n  return isCopied;\n};\n\n// TODO: Async Clipboard API\n// https://developers.google.com/web/updates/2018/03/clipboardapi\nconst useCopyClipboard = (): [boolean, (x: string) => void] => {\n  const [isCopied, setCopied] = useState<boolean>(false);\n\n  return [\n    isCopied,\n    text => {\n      const didCopy = copy(text);\n      setCopied(didCopy);\n    },\n  ];\n};\n\nexport default useCopyClipboard;\n","import { useRef } from 'react';\n\ntype Fn = (...args: any) => any;\n\nfunction useDebounce<T extends Fn>(func: T, delay: number): T {\n  const timerRef = useRef<number | null>(null);\n\n  const debounced = (...args: any) => {\n    if (timerRef.current) {\n      window.clearTimeout(timerRef.current);\n    }\n\n    timerRef.current = window.setTimeout(() => {\n      func(...args);\n    }, delay);\n  };\n\n  return debounced as T;\n}\n\nexport default useDebounce;\n","import { useState, useEffect, useRef } from 'react';\nimport { throttle } from './utils';\n\ninterface Options {\n  root?: HTMLElement;\n  rootMargin?: string;\n  threshold?: number | number[];\n}\n\nconst inViewportPolyfill = (\n  element: HTMLElement,\n  callback: (x: any) => void,\n  options: Options\n) => {\n  const { root = document.documentElement } = options;\n  const viewWidth = root.clientWidth;\n  const viewHeight = root.clientHeight;\n\n  const update = throttle(() => {\n    const {\n      width,\n      height,\n      top,\n      bottom,\n      left,\n      right,\n    } = element.getBoundingClientRect();\n\n    callback(\n      width &&\n        height &&\n        top < viewHeight &&\n        bottom > 0 &&\n        left < viewWidth &&\n        right > 0\n    );\n  }, 250);\n\n  document.addEventListener('scroll', update);\n  return () => document.removeEventListener('scroll', update);\n};\n\nconst useInViewport = (options: Options = {}) => {\n  const [inViewport, setInViewport] = useState<boolean>(false);\n  const ref = useRef<HTMLElement>();\n  const { root, rootMargin = '0px', threshold = [0] } = options;\n\n  useEffect(() => {\n    let unobserve = () => {};\n\n    if (window.IntersectionObserver) {\n      const observer = new window.IntersectionObserver(\n        ([entry]) => {\n          setInViewport(entry.isIntersecting);\n        },\n        { root, rootMargin, threshold }\n      );\n\n      if (ref.current) {\n        observer.observe(ref.current);\n        unobserve = () => observer.unobserve(ref.current!);\n      }\n    } else {\n      if (ref.current) {\n        unobserve = inViewportPolyfill(ref.current, setInViewport, options);\n      }\n    }\n\n    return unobserve;\n  }, []);\n\n  return [inViewport, ref];\n};\n\nexport default useInViewport;\n","export const debounce = (func: () => any, wait: number) => {\n  let timer: number;\n\n  return (...args: []) => {\n    if (timer) {\n      clearTimeout(timer);\n    }\n\n    timer = window.setTimeout(() => {\n      func(...args);\n    }, wait);\n  };\n};\n\nexport const throttle = (func: () => any, wait: number) => {\n  let last: number, timer: number;\n\n  return (...args: []) => {\n    const now = Date.now();\n\n    if (last && now - last < wait) {\n      clearTimeout(timer);\n\n      timer = window.setTimeout(() => {\n        last = now;\n        func(...args);\n      }, wait);\n    } else {\n      last = now;\n      func(...args);\n    }\n  };\n};\n","import { useState, useEffect } from 'react';\n\nfunction useMounted(): boolean {\n  const [mounted, setMounted] = useState<boolean>(false);\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  return mounted;\n}\n\nexport default useMounted;\n","import { useRef } from 'react';\n\ntype Fn = (...args: any) => any;\n\nfunction useThrottle<T extends Fn>(func: T, delay: number): T {\n  const lastTimeRef = useRef<number>(Date.now());\n  const timerRef = useRef<number | null>(null);\n\n  const throttled = (...args: any) => {\n    if (Date.now() - lastTimeRef.current < delay) {\n      if (timerRef.current) {\n        window.clearTimeout(timerRef.current);\n      }\n\n      timerRef.current = window.setTimeout(() => {\n        func(...args);\n        lastTimeRef.current = Date.now();\n      }, delay);\n    } else {\n      func(...args);\n      lastTimeRef.current = Date.now();\n    }\n  };\n\n  return throttled as T;\n}\n\nexport default useThrottle;\n"],"names":["initialValue","useState","value","setValue","forceValue","setCopied","text","didCopy","isCopied","document","addEventListener","onCopy","e","clipboardData","setData","preventDefault","removeEventListener","execCommand","err","console","log","textArea","createElement","style","position","top","left","body","appendChild","focus","select","removeChild","copyPolyfill","copy","func","delay","timerRef","useRef","args","current","window","clearTimeout","setTimeout","options","inViewport","setInViewport","ref","root","rootMargin","threshold","useEffect","unobserve","IntersectionObserver","observer","isIntersecting","observe","element","callback","last","timer","documentElement","viewWidth","clientWidth","viewHeight","clientHeight","update","getBoundingClientRect","width","height","bottom","right","now","Date","inViewportPolyfill","mounted","setMounted","lastTimeRef"],"mappings":"8GAEmB,SACjBA,SAE0BC,WAAkBD,GAArCE,OAAOC,aAUP,CAACD,EARO,SAACE,GAEZD,EADwB,kBAAfC,EACAA,GAECF,+BCsCS,iBACOD,YAAkB,GAA/BI,aAEV,MAEL,SAAAC,OACQC,EA/BC,SAACD,OAORE,EANJC,SAASC,iBAAiB,QAAQ,SAASC,EAAOC,GAChDA,EAAEC,cAAcC,QAAQ,aAAcR,GACtCM,EAAEG,iBACFN,SAASO,oBAAoB,OAAQL,UAMrCH,EAAWC,SAASQ,YAAY,QAChC,MAAOC,GACPV,GAAW,EACXW,QAAQC,IAAIF,UAGTV,IACHA,EAvCiB,SAACF,OACde,EAAWZ,SAASa,cAAc,YAExCD,EAASE,MAAMC,SAAW,WAC1BH,EAASE,MAAME,IAAM,UACrBJ,EAASE,MAAMG,KAAO,UACtBL,EAASnB,MAAQI,EAEjBG,SAASkB,KAAKC,YAAYP,GAC1BA,EAASQ,QACTR,EAASS,oBAGArB,SAASQ,YAAY,QAC5B,MAAOC,UACPC,QAAQC,IAAIF,IACL,UAEPT,SAASkB,KAAKI,YAAYV,IAqBfW,CAAa1B,IAGnBE,EAWayB,CAAK3B,GACrBD,EAAUE,0BCpDhB,SAAmC2B,EAASC,OACpCC,EAAWC,SAAsB,aAErB,sCAAIC,2BAAAA,kBAChBF,EAASG,SACXC,OAAOC,aAAaL,EAASG,SAG/BH,EAASG,QAAUC,OAAOE,YAAW,WACnCR,eAAQI,KACPH,2BC4Be,SAACQ,YAAAA,IAAAA,EAAmB,UACJ1C,YAAkB,GAA/C2C,OAAYC,OACbC,EAAMT,WACJU,EAA8CJ,EAA9CI,OAA8CJ,EAAxCK,WAAAA,aAAa,UAA2BL,EAApBM,UAAAA,aAAY,CAAC,YAE/CC,aAAU,eACJC,EAAY,gBAEZX,OAAOY,qBAAsB,KACzBC,EAAW,IAAIb,OAAOY,sBAC1B,YACEP,OAAoBS,kBAEtB,CAAEP,KAAAA,EAAMC,WAAAA,EAAYC,UAAAA,IAGlBH,EAAIP,UACNc,EAASE,QAAQT,EAAIP,SACrBY,EAAY,kBAAME,EAASF,UAAUL,EAAIP,gBAGvCO,EAAIP,UACNY,EAvDmB,SACzBK,EACAC,EACAd,OCEuBT,EACnBwB,EAAcC,IDD0BhB,EAApCI,KAAAA,aAAOtC,SAASmD,kBAClBC,EAAYd,EAAKe,YACjBC,EAAahB,EAAKiB,aAElBC,GCJiB/B,EDIC,iBAQlBsB,EAAQU,wBAEZT,IAREU,SACAC,UACA3C,IASQsC,KARRM,OASW,KARX3C,KASSmC,KARTS,MASU,ICjBP,sCAAIhC,2BAAAA,sBACHiC,EAAMC,KAAKD,MAEbb,GAAQa,EAAMb,EDgBjB,KCfCjB,aAAakB,GAEbA,EAAQnB,OAAOE,YAAW,WACxBgB,EAAOa,EACPrC,eAAQI,KDWX,OCRCoB,EAAOa,EACPrC,eAAQI,aDSZ7B,SAASC,iBAAiB,SAAUuD,GAC7B,kBAAMxD,SAASO,oBAAoB,SAAUiD,IAyBlCQ,CAAmB3B,EAAIP,QAASM,EAAeF,WAIxDQ,IACN,IAEI,CAACP,EAAYE,uBErEtB,iBACgC7C,YAAkB,GAAzCyE,OAASC,cAEhBzB,aAAU,WACRyB,GAAW,KACV,IAEID,uBCLT,SAAmCxC,EAASC,OACpCyC,EAAcvC,SAAemC,KAAKD,OAClCnC,EAAWC,SAAsB,aAErB,sCAAIC,2BAAAA,kBAChBkC,KAAKD,MAAQK,EAAYrC,QAAUJ,GACjCC,EAASG,SACXC,OAAOC,aAAaL,EAASG,SAG/BH,EAASG,QAAUC,OAAOE,YAAW,WACnCR,eAAQI,GACRsC,EAAYrC,QAAUiC,KAAKD,QAC1BpC,KAEHD,eAAQI,GACRsC,EAAYrC,QAAUiC,KAAKD"}