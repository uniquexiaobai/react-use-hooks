{"version":3,"file":"react-use-hooks.cjs.production.min.js","sources":["../src/index.tsx","../src/use-boolean.tsx","../src/use-copy-clipboard.tsx","../src/use-in-viewport.tsx","../src/utils.ts"],"sourcesContent":["import * as React from 'react';\n\nexport { default as useInViewport } from './use-in-viewport';\nexport { default as useCopyClipboard } from './use-copy-clipboard';\nexport { default as useBoolean } from './use-boolean';\n\nexport const Hello = () => {\n\treturn <div>hello react hooks</div>;\n};\n","import { useState } from 'react';\n\nconst useBoolean = (\n\tinitialValue: boolean\n): [boolean, (x?: boolean) => void] => {\n\tconst [value, setValue] = useState<boolean>(initialValue);\n\n\tconst toggle = (forceValue?: boolean) => {\n\t\tif (typeof forceValue === 'boolean') {\n\t\t\tsetValue(forceValue);\n\t\t} else {\n\t\t\tsetValue(!value);\n\t\t}\n\t};\n\n\treturn [value, toggle];\n};\n\nexport default useBoolean;\n","import { useState } from 'react';\n\nconst copyPolyfill = (text: string) => {\n\tconst textArea = document.createElement('textarea');\n\n\ttextArea.style.position = 'absolute';\n\ttextArea.style.top = '-9999px';\n\ttextArea.style.left = '-9999px';\n\ttextArea.value = text;\n\n\tdocument.body.appendChild(textArea);\n\ttextArea.focus();\n\ttextArea.select();\n\n\ttry {\n\t\treturn document.execCommand('copy');\n\t} catch (err) {\n\t\tconsole.log(err);\n\t\treturn false;\n\t} finally {\n\t\tdocument.body.removeChild(textArea);\n\t}\n};\n\nconst copy = (text: string) => {\n\tdocument.addEventListener('copy', function onCopy(e: any) {\n\t\te.clipboardData.setData('text/plain', text);\n\t\te.preventDefault();\n\t\tdocument.removeEventListener('copy', onCopy);\n\t});\n\n\tlet isCopied;\n\n\ttry {\n\t\tisCopied = document.execCommand('copy');\n\t} catch (err) {\n\t\tisCopied = false;\n\t\tconsole.log(err);\n\t}\n\n\tif (!isCopied) {\n\t\tisCopied = copyPolyfill(text);\n\t}\n\n\treturn isCopied;\n};\n\n// TODO: Async Clipboard API\n// https://developers.google.com/web/updates/2018/03/clipboardapi\nconst useCopyClipboard = (): [boolean, (x: string) => void] => {\n\tconst [isCopied, setCopied] = useState<boolean>(false);\n\n\treturn [\n\t\tisCopied,\n\t\ttext => {\n\t\t\tconst didCopy = copy(text);\n\t\t\tsetCopied(didCopy);\n\t\t},\n\t];\n};\n\nexport default useCopyClipboard;\n","import { useState, useEffect, useRef } from 'react';\nimport { throttle } from './utils';\n\ninterface Options {\n\troot?: HTMLElement;\n\trootMargin?: string;\n\tthreshold?: number | number[];\n}\n\nconst inViewportPolyfill = (\n\telement: HTMLElement,\n\tcallback: (x: any) => void,\n\toptions: Options\n) => {\n\tconst { root = document.documentElement } = options;\n\tconst viewWidth = root.clientWidth;\n\tconst viewHeight = root.clientHeight;\n\n\tconst update = throttle(() => {\n\t\tconst {\n\t\t\twidth,\n\t\t\theight,\n\t\t\ttop,\n\t\t\tbottom,\n\t\t\tleft,\n\t\t\tright,\n\t\t} = element.getBoundingClientRect();\n\n\t\tcallback(\n\t\t\twidth &&\n\t\t\t\theight &&\n\t\t\t\ttop < viewHeight &&\n\t\t\t\tbottom > 0 &&\n\t\t\t\tleft < viewWidth &&\n\t\t\t\tright > 0\n\t\t);\n\t}, 250);\n\n\tdocument.addEventListener('scroll', update);\n\treturn () => document.removeEventListener('scroll', update);\n};\n\nconst useInViewport = (options: Options = {}) => {\n\tconst [inViewport, setInViewport] = useState<boolean>(false);\n\tconst ref = useRef<HTMLElement>();\n\tconst { root, rootMargin = '0px', threshold = [0] } = options;\n\n\tuseEffect(() => {\n\t\tlet unobserve = () => {};\n\n\t\tif (window.IntersectionObserver) {\n\t\t\tconst observer = new window.IntersectionObserver(\n\t\t\t\t([entry]) => {\n\t\t\t\t\tsetInViewport(entry.isIntersecting);\n\t\t\t\t},\n\t\t\t\t{ root, rootMargin, threshold }\n\t\t\t);\n\n\t\t\tif (ref.current) {\n\t\t\t\tobserver.observe(ref.current);\n\t\t\t\tunobserve = () => observer.unobserve(ref.current!);\n\t\t\t}\n\t\t} else {\n\t\t\tif (ref.current) {\n\t\t\t\tunobserve = inViewportPolyfill(ref.current, setInViewport, options);\n\t\t\t}\n\t\t}\n\n\t\treturn unobserve;\n\t}, []);\n\n\treturn [inViewport, ref];\n};\n\nexport default useInViewport;\n","export const debounce = (func: () => any, wait: number) => {\n\tlet timer: number;\n\n\treturn (...args: []) => {\n\t\tif (timer) {\n\t\t\tclearTimeout(timer);\n\t\t}\n\n\t\ttimer = window.setTimeout(() => {\n\t\t\tfunc(...args);\n\t\t}, wait);\n\t};\n};\n\nexport const throttle = (func: () => any, wait: number) => {\n\tlet last: number, timer: number;\n\n\treturn (...args: []) => {\n\t\tconst now = Date.now();\n\n\t\tif (last && now - last < wait) {\n\t\t\tclearTimeout(timer);\n\n\t\t\ttimer = window.setTimeout(() => {\n\t\t\t\tlast = now;\n\t\t\t\tfunc(...args);\n\t\t\t}, wait);\n\t\t} else {\n\t\t\tlast = now;\n\t\t\tfunc(...args);\n\t\t}\n\t};\n};\n"],"names":["React","initialValue","useState","value","setValue","forceValue","setCopied","text","didCopy","isCopied","document","addEventListener","onCopy","e","clipboardData","setData","preventDefault","removeEventListener","execCommand","err","console","log","textArea","createElement","style","position","top","left","body","appendChild","focus","select","removeChild","copyPolyfill","copy","options","inViewport","setInViewport","ref","useRef","root","rootMargin","threshold","useEffect","unobserve","window","IntersectionObserver","observer","isIntersecting","current","observe","element","callback","func","last","timer","documentElement","viewWidth","clientWidth","viewHeight","clientHeight","update","getBoundingClientRect","width","height","bottom","right","args","now","Date","clearTimeout","setTimeout","inViewportPolyfill"],"mappings":"yGAMqB,kBACbA,oECLW,SAClBC,SAE0BC,WAAkBD,GAArCE,OAAOC,aAUP,CAACD,EARO,SAACE,GAEdD,EADyB,kBAAfC,EACDA,GAECF,+BCsCY,iBACMD,YAAkB,GAA/BI,aAEV,MAEN,SAAAC,OACOC,EA/BI,SAACD,OAOTE,EANJC,SAASC,iBAAiB,QAAQ,SAASC,EAAOC,GACjDA,EAAEC,cAAcC,QAAQ,aAAcR,GACtCM,EAAEG,iBACFN,SAASO,oBAAoB,OAAQL,UAMrCH,EAAWC,SAASQ,YAAY,QAC/B,MAAOC,GACRV,GAAW,EACXW,QAAQC,IAAIF,UAGRV,IACJA,EAvCmB,SAACF,OACfe,EAAWZ,SAASa,cAAc,YAExCD,EAASE,MAAMC,SAAW,WAC1BH,EAASE,MAAME,IAAM,UACrBJ,EAASE,MAAMG,KAAO,UACtBL,EAASnB,MAAQI,EAEjBG,SAASkB,KAAKC,YAAYP,GAC1BA,EAASQ,QACTR,EAASS,oBAGDrB,SAASQ,YAAY,QAC3B,MAAOC,UACRC,QAAQC,IAAIF,IACL,UAEPT,SAASkB,KAAKI,YAAYV,IAqBfW,CAAa1B,IAGlBE,EAWWyB,CAAK3B,GACrBD,EAAUE,4BCdS,SAAC2B,YAAAA,IAAAA,EAAmB,UACLjC,YAAkB,GAA/CkC,OAAYC,OACbC,EAAMC,WACJC,EAA8CL,EAA9CK,OAA8CL,EAAxCM,WAAAA,aAAa,UAA2BN,EAApBO,UAAAA,aAAY,CAAC,YAE/CC,aAAU,eACLC,EAAY,gBAEZC,OAAOC,qBAAsB,KAC1BC,EAAW,IAAIF,OAAOC,sBAC3B,YACCT,OAAoBW,kBAErB,CAAER,KAAAA,EAAMC,WAAAA,EAAYC,UAAAA,IAGjBJ,EAAIW,UACPF,EAASG,QAAQZ,EAAIW,SACrBL,EAAY,kBAAMG,EAASH,UAAUN,EAAIW,gBAGtCX,EAAIW,UACPL,EAvDuB,SAC1BO,EACAC,EACAjB,OCEwBkB,EACpBC,EAAcC,IDD0BpB,EAApCK,KAAAA,aAAO9B,SAAS8C,kBAClBC,EAAYjB,EAAKkB,YACjBC,EAAanB,EAAKoB,aAElBC,GCJkBR,EDIA,iBAQnBF,EAAQW,wBAEZV,IARCW,SACAC,UACAtC,IASOiC,KARPM,OASU,KARVtC,KASQ8B,KARRS,MASS,ICjBJ,sCAAIC,2BAAAA,sBACJC,EAAMC,KAAKD,MAEbd,GAAQc,EAAMd,EDgBhB,KCfDgB,aAAaf,GAEbA,EAAQV,OAAO0B,YAAW,WACzBjB,EAAOc,EACPf,eAAQc,KDWR,OCRDb,EAAOc,EACPf,eAAQc,aDSVzD,SAASC,iBAAiB,SAAUkD,GAC7B,kBAAMnD,SAASO,oBAAoB,SAAU4C,IAyBrCW,CAAmBlC,EAAIW,QAASZ,EAAeF,WAItDS,IACL,IAEI,CAACR,EAAYE"}